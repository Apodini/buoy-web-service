name: Build and Test

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop
  workflow_dispatch:


jobs:
  linuxarmwebservices:
    name: Linux ARM WebService
    runs-on: self-hosted
    container:
      image: swiftlang/swift@sha256:59fd39504339a0c0b24a304bb50028ff679bf60b45f25f6acd42b0530a1188c6
    defaults:
      run:
        working-directory: ./WebService
    steps:
      - uses: actions/checkout@v2
      - name: Cache .build
        uses: actions/cache@v2
        env:
          cache-name: cache-swift-build
        with:
          path: ./WebService/.build
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('./WebService/Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install libsqlite3
        run: apt-get update && apt-get install -y --no-install-recommends libsqlite3-dev
      - name: Check Swift version
        run: swift --version
      - name: Build and test
        run: swift build -Xswiftc -Xfrontend -Xswiftc -sil-verify-none
  linuxwebservices:
    name: Linux WebService ${{ matrix.linux }}
    runs-on: ubuntu-latest
    container:
      image: swiftlang/swift:nightly-5.5-${{ matrix.linux }}
    strategy:
      matrix:
        linux: [bionic, focal, amazonlinux2, centos8]
    defaults:
      run:
        working-directory: ./WebService
    steps:
    - uses: actions/checkout@v2
    - name: Install libsqlite3
      if: ${{ !(startsWith( matrix.linux, 'centos' ) || startsWith( matrix.linux, 'amazonlinux' )) }}
      run: apt-get update && apt-get install -y --no-install-recommends libsqlite3-dev
    - name: Install libsqlite3
      if: startsWith( matrix.linux, 'amazonlinux' )
      run: yum update -y && yum install -y sqlite-devel
    - name: Install libsqlite3
      if: startsWith( matrix.linux, 'centos' )
      run: yum update -y --nobest && yum install -y sqlite-devel
    - name: Check Swift version
      run: swift --version
    - name: Build and test
      run: swift build -Xswiftc -Xfrontend -Xswiftc -sil-verify-none
